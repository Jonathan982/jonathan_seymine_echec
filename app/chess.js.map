{"version":3,"sources":["chess.ts"],"names":[],"mappings":"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","file":"chess.js","sourcesContent":["'use strict'\r\n/**\r\n* Board\r\n*/\r\nclass Board {\r\n    squares: Square[];\r\n    boardContainer: JQuery;\r\n    constructor(selector: JQuery, startingPieces: Piece[]) {\r\n        this.writeBoard(selector);\r\n        this.writePieces(startingPieces);\r\n    };\r\n\r\n    writePieces(pieces: Piece[]): void {\r\n        $('.chess-piece').remove();\r\n        pieces.forEach((p) => {\r\n            $('#' + p.placedAt.getName()).html(`<span id=${p.getId()}\r\n            class='chess-piece chess-piece-${p.getColorName().toLocaleLowerCase()}'>\r\n            ${p.symbol}\r\n            </span>`);\r\n        });\r\n    };\r\n\r\n    writeBoard(selector: JQuery): JQuery {\r\n        this.boardContainer = $(selector).first();\r\n        let newBoardElement = this.boardContainer.html(\"<table id='chessTable'><thead id='chessHead'></thead></thead><tbody id='chessBody'></tbody><tfoot id='chessFoot'></tfoot></table>\");\r\n        let chessBody = $('#chessBody');\r\n        this.squares = new Array<Square>();\r\n        for (var i = 8; i >= 1; i--) {\r\n            let rowString = \"chessRow\" + i;\r\n            chessBody.append(`<tr id='${rowString}'></tr>`);\r\n            for (var j = 1; j <= 8; j++) {\r\n                let square = new Square(i, j);\r\n                this.squares.push(square);\r\n                $('#' + rowString).append(`<td id='${square.getName()}' data-row='${square.row}' data-col='${square.column}' class='chess-square chess-${square.getColorName().toLocaleLowerCase()}'></td>`);\r\n            }\r\n        }\r\n        return newBoardElement;\r\n    };\r\n}\r\n\r\nclass Chess {\r\n    board: Board;\r\n    playedMoves: Move[];\r\n    toMove: Player;\r\n    players: Player[];\r\n\r\n    startMove(startSquare: Square) { };\r\n    endMove(endSquare: Square) { };\r\n    getPieces(): Piece[] {\r\n        let pieces = new Array<Piece>().concat(\r\n            this.players[Color.Black].pieces, \r\n            this.players[Color.White].pieces\r\n        );\r\n        return pieces;\r\n    }\r\n    \r\n    updateBoard(): void {\r\n        this.board.writePieces(this.getPieces());\r\n    };\r\n    \r\n    pieceClick(event: JQueryEventObject): void {\r\n        var pieceId = event.target.id;\r\n        var piece = this.getPieces().find((p) => p.getId() == pieceId);\r\n        piece.selected = true;\r\n        piece.placedAt.row++;\r\n        this.updateBoard();\r\n    }\r\n    \r\n    squareClick(event: JQueryEventObject): void {\r\n        console.log('clicky click', this);\r\n    }\r\n    \r\n    bindEvents(selector: JQuery): void {\r\n        selector.on('click', '.chess-piece', (eventObject: JQueryEventObject) => {\r\n            this.pieceClick(eventObject);\r\n        });\r\n        selector.on('click', '.chess-square', (eventObject: JQueryEventObject) => {\r\n            this.squareClick(eventObject);\r\n        });\r\n    }; \r\n    constructor(selector: JQuery) {\r\n        \r\n        this.players = [new Player(Color.White), new Player(Color.Black)];\r\n        this.toMove = this.players[Color.White];\r\n        this.playedMoves = new Array<Move>();\r\n        this.board = new Board(selector, this.getPieces());\r\n        this.bindEvents(selector);\r\n    };\r\n}\r\n\r\nclass Move {\r\n    start: Square;\r\n    end: Square;\r\n    piece: Piece;\r\n    isComplete: boolean;\r\n}\r\n\r\n/**\r\n * Piece\r\n *\r\n */\r\nclass Piece {\r\n    constructor(\r\n        piceType: PieceType,\r\n        pieceColor: Color,\r\n        startAt: Square,\r\n        symbol: string) {\r\n        this.type = piceType;\r\n        this.color = pieceColor;\r\n        this.placedAt = startAt;\r\n        this.startAt = startAt;\r\n        this.symbol = symbol;\r\n        this.moved = false;\r\n        this.captured = false;\r\n        this.selected = false;\r\n    }\r\n    color: Color;\r\n    placedAt: Square;\r\n    startAt: Square;\r\n    type: PieceType;\r\n    moved: boolean;\r\n    captured: boolean;\r\n    selected: boolean;\r\n    symbol: string;\r\n    \r\n    getId(): string {\r\n        return this.startAt.getName()+this.symbol;\r\n    }\r\n    \r\n    getColorName():string {\r\n        return Color[this.color];\r\n    }\r\n}\r\n\r\nclass King extends Piece {\r\n    constructor(pieceColor: Color, placedAt: Square) {\r\n        var symbol = pieceColor === Color.White ? '♔' : '♚';\r\n        super(PieceType.King, pieceColor, placedAt, symbol);\r\n    }\r\n}\r\n\r\nclass Queen extends Piece {\r\n    constructor(pieceColor: Color, placedAt: Square) {\r\n        var symbol = pieceColor === Color.White ? '♕' : '♛';\r\n        super(PieceType.Queen, pieceColor, placedAt, symbol);\r\n    }\r\n}\r\n\r\nclass Bishop extends Piece {\r\n    constructor(pieceColor: Color, placedAt: Square) {\r\n        var symbol = pieceColor === Color.White ? '♗' : '♝';\r\n        super(PieceType.Bishop, pieceColor, placedAt,symbol);\r\n    }\r\n}\r\n\r\nclass Knight extends Piece {\r\n    constructor(pieceColor: Color, placedAt: Square) {\r\n        var symbol = pieceColor === Color.White ? '♘' : '♞';\r\n        super(PieceType.Knight, pieceColor, placedAt,symbol);\r\n        \r\n    }\r\n}\r\n\r\nclass Tower extends Piece {\r\n    constructor(pieceColor: Color, placedAt: Square) {\r\n        var symbol = pieceColor === Color.White ? '♖' : '♜';\r\n        super(PieceType.Knight, pieceColor, placedAt,symbol);\r\n    }\r\n}\r\n\r\nclass Pawn extends Piece {\r\n    constructor(pieceColor: Color, placedAt: Square) {\r\n        var symbol = pieceColor === Color.White ?  '♙' : '♟';\r\n        super(PieceType.Pawn, pieceColor, placedAt, symbol);\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * Square\r\n */\r\nclass Square {\r\n    row: number;\r\n    column: Columns;\r\n\r\n    getLetter() {\r\n        return Columns[this.column];\r\n    };\r\n\r\n    getName() {\r\n        return this.getLetter() + this.row;\r\n    }\r\n\r\n    getColor() {\r\n        return (this.row + this.column - 1) % 2\r\n    }\r\n\r\n    getColorName() {\r\n        return Color[this.getColor()];\r\n    }\r\n\r\n    constructor(row: number, column: Columns) {\r\n        this.row = row;\r\n        this.column = column;\r\n    }\r\n\r\n}\r\n\r\n\r\n/**\r\n * Player\r\n */\r\nclass Player {\r\n    color: Color;\r\n    direction: MoveDirection;\r\n    pieces: Piece[];\r\n\r\n    isWhite(): boolean {\r\n        return this.color == Color.White;\r\n    }\r\n\r\n    constructor(color: Color) {\r\n        this.color = color;\r\n        this.direction = color == Color.White ? MoveDirection.Up : MoveDirection.Down;\r\n        let startingRow = this.isWhite() ? 1 : 8;\r\n        this.pieces = new Array<Piece>(\r\n            new Tower(color, new Square(startingRow, Columns.A)),\r\n            new Tower(color, new Square(startingRow, Columns.H)),\r\n            new Knight(color, new Square(startingRow, Columns.G)),\r\n            new Bishop(color, new Square(startingRow, Columns.C)),\r\n            new Bishop(color, new Square(startingRow, Columns.F)),\r\n            new Knight(color, new Square(startingRow, Columns.B)),\r\n            new Queen(color, new Square(startingRow, Columns.D)),\r\n            new King(color, new Square(startingRow, Columns.E))\r\n        ).concat(this.getStartingPawns());\r\n    }\r\n\r\n    private getStartingPawns(): Pawn[] {\r\n        var pawns = new Array<Pawn>();\r\n        for (var i = 1; i <= 8; i++) {\r\n            pawns.push(new Pawn(this.color, new Square(this.isWhite() ? 2 : 7, i)));\r\n        }\r\n        return pawns;\r\n    }\r\n}\r\n\r\nenum PieceType { King=1, Queen, Rook, Knight, Bishop, Tower, Pawn }\r\nenum Color { White, Black }\r\nenum MoveDirection { Up = 1, Down = -1 }\r\nenum Columns { A = 1, B, C, D, E, F, G, H }\r\n\r\n\r\n$(function() {\r\n    var chessGame = new Chess($(\"#board\"));\r\n});\r\n\r\n\r\n\r\n"],"sourceRoot":"/source/"}